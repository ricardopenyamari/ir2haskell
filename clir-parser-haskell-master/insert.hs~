
This is the CAVI-ART CLIR-to-Haskell transformer tool


uutPrec x m a =
  And
    (FTerm (Aplic (Aplic (TConst (<=)) (TConst 0)) (TVar m)))
    (And
       (FTerm (Aplic (Aplic (TConst (<)) (TVar m)) (Aplic ((TConst len)) (TVar a))))
       (Forall
          (GuardIntTuple
             (Tuple2 (TConst 0) (TConst 0))
             (Tuple2 (Aplic (Aplic (TConst (-)) TVar m) (TConst 1)) (Aplic (Aplic (TConst (-)) TVar m) (TConst 1))))
          (\(i, j) -> (Imp
                         (FTerm (Aplic (Aplic (TConst (<=)) (TConst 0)) (TVar i)))
                         (Imp
                            (FTerm (Aplic (Aplic (TConst (<=)) (TVar i)) (TVar j)))
                            (Imp
                               (FTerm (Aplic (Aplic (TConst (<)) (TVar j)) (TVar m)))
                               (FTerm (Aplic (Aplic (TConst (<=)) (Aplic (Aplic ((TConst get_array)) (TVar a)) (TVar i))) (Aplic (Aplic ((TConst get_array)) (TVar a)) (TVar j))))))))))
insert x m a =
  let i = (-) m 1 in
    f2 x m i a
    where
      f2 x m i a =
        let b1 = (>=) i 0 in
          case b1 of
            False -> f4 x m i a
            True -> let e = get-array a i in
              let b2 = (<) x e in
                case b2 of
                  True -> let e = get-array a i in
                    let i2 = (+) i 1 in
                      let ap = set-array a i2 e in
                        let i3 = (-) i 1 in
                          f2 x m i3 ap
                  False -> f4 x m i a
      f4 x m i a =
        let i2 = (+) i 1 in
          let ap = set-array a i2 x in
            ap
uutPost x m a res =
  Forall
    (GuardIntTuple
       (Tuple2 (TConst 0) (TConst 0))
       (Tuple2 (TVar m) (TVar m)))
    (\(i, j) -> (Imp
                   (FTerm (Aplic (Aplic (TConst (<=)) (TConst 0)) (TVar i)))
                   (Imp
                      (FTerm (Aplic (Aplic (TConst (<=)) (TVar i)) (TVar j)))
                      (Imp
                         (FTerm (Aplic (Aplic (TConst (<=)) (TVar j)) (TVar m)))
                         (FTerm (Aplic (Aplic (TConst (<=)) (Aplic (Aplic ((TConst get_array)) (TVar res)) (TVar i))) (Aplic (Aplic ((TConst get_array)) (TVar res)) (TVar j))))))))

